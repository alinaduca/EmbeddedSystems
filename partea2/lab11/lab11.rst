                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lab11
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _CY
                                     13 	.globl _AC
                                     14 	.globl _F0
                                     15 	.globl _RS1
                                     16 	.globl _RS0
                                     17 	.globl _OV
                                     18 	.globl _F1
                                     19 	.globl _P
                                     20 	.globl _PS
                                     21 	.globl _PT1
                                     22 	.globl _PX1
                                     23 	.globl _PT0
                                     24 	.globl _PX0
                                     25 	.globl _RD
                                     26 	.globl _WR
                                     27 	.globl _T1
                                     28 	.globl _T0
                                     29 	.globl _INT1
                                     30 	.globl _INT0
                                     31 	.globl _TXD
                                     32 	.globl _RXD
                                     33 	.globl _P3_7
                                     34 	.globl _P3_6
                                     35 	.globl _P3_5
                                     36 	.globl _P3_4
                                     37 	.globl _P3_3
                                     38 	.globl _P3_2
                                     39 	.globl _P3_1
                                     40 	.globl _P3_0
                                     41 	.globl _EA
                                     42 	.globl _ES
                                     43 	.globl _ET1
                                     44 	.globl _EX1
                                     45 	.globl _ET0
                                     46 	.globl _EX0
                                     47 	.globl _P2_7
                                     48 	.globl _P2_6
                                     49 	.globl _P2_5
                                     50 	.globl _P2_4
                                     51 	.globl _P2_3
                                     52 	.globl _P2_2
                                     53 	.globl _P2_1
                                     54 	.globl _P2_0
                                     55 	.globl _SM0
                                     56 	.globl _SM1
                                     57 	.globl _SM2
                                     58 	.globl _REN
                                     59 	.globl _TB8
                                     60 	.globl _RB8
                                     61 	.globl _TI
                                     62 	.globl _RI
                                     63 	.globl _P1_7
                                     64 	.globl _P1_6
                                     65 	.globl _P1_5
                                     66 	.globl _P1_4
                                     67 	.globl _P1_3
                                     68 	.globl _P1_2
                                     69 	.globl _P1_1
                                     70 	.globl _P1_0
                                     71 	.globl _TF1
                                     72 	.globl _TR1
                                     73 	.globl _TF0
                                     74 	.globl _TR0
                                     75 	.globl _IE1
                                     76 	.globl _IT1
                                     77 	.globl _IE0
                                     78 	.globl _IT0
                                     79 	.globl _P0_7
                                     80 	.globl _P0_6
                                     81 	.globl _P0_5
                                     82 	.globl _P0_4
                                     83 	.globl _P0_3
                                     84 	.globl _P0_2
                                     85 	.globl _P0_1
                                     86 	.globl _P0_0
                                     87 	.globl _B
                                     88 	.globl _ACC
                                     89 	.globl _PSW
                                     90 	.globl _IP
                                     91 	.globl _P3
                                     92 	.globl _IE
                                     93 	.globl _P2
                                     94 	.globl _SBUF
                                     95 	.globl _SCON
                                     96 	.globl _P1
                                     97 	.globl _TH1
                                     98 	.globl _TH0
                                     99 	.globl _TL1
                                    100 	.globl _TL0
                                    101 	.globl _TMOD
                                    102 	.globl _TCON
                                    103 	.globl _PCON
                                    104 	.globl _DPH
                                    105 	.globl _DPL
                                    106 	.globl _SP
                                    107 	.globl _P0
                                    108 	.globl _j
                                    109 	.globl _i
                                    110 	.globl _v
                                    111 	.globl _z
                                    112 	.globl _u
                                    113 	.globl _x
                                    114 ;--------------------------------------------------------
                                    115 ; special function registers
                                    116 ;--------------------------------------------------------
                                    117 	.area RSEG    (ABS,DATA)
      000000                        118 	.org 0x0000
                           000080   119 _P0	=	0x0080
                           000081   120 _SP	=	0x0081
                           000082   121 _DPL	=	0x0082
                           000083   122 _DPH	=	0x0083
                           000087   123 _PCON	=	0x0087
                           000088   124 _TCON	=	0x0088
                           000089   125 _TMOD	=	0x0089
                           00008A   126 _TL0	=	0x008a
                           00008B   127 _TL1	=	0x008b
                           00008C   128 _TH0	=	0x008c
                           00008D   129 _TH1	=	0x008d
                           000090   130 _P1	=	0x0090
                           000098   131 _SCON	=	0x0098
                           000099   132 _SBUF	=	0x0099
                           0000A0   133 _P2	=	0x00a0
                           0000A8   134 _IE	=	0x00a8
                           0000B0   135 _P3	=	0x00b0
                           0000B8   136 _IP	=	0x00b8
                           0000D0   137 _PSW	=	0x00d0
                           0000E0   138 _ACC	=	0x00e0
                           0000F0   139 _B	=	0x00f0
                                    140 ;--------------------------------------------------------
                                    141 ; special function bits
                                    142 ;--------------------------------------------------------
                                    143 	.area RSEG    (ABS,DATA)
      000000                        144 	.org 0x0000
                           000080   145 _P0_0	=	0x0080
                           000081   146 _P0_1	=	0x0081
                           000082   147 _P0_2	=	0x0082
                           000083   148 _P0_3	=	0x0083
                           000084   149 _P0_4	=	0x0084
                           000085   150 _P0_5	=	0x0085
                           000086   151 _P0_6	=	0x0086
                           000087   152 _P0_7	=	0x0087
                           000088   153 _IT0	=	0x0088
                           000089   154 _IE0	=	0x0089
                           00008A   155 _IT1	=	0x008a
                           00008B   156 _IE1	=	0x008b
                           00008C   157 _TR0	=	0x008c
                           00008D   158 _TF0	=	0x008d
                           00008E   159 _TR1	=	0x008e
                           00008F   160 _TF1	=	0x008f
                           000090   161 _P1_0	=	0x0090
                           000091   162 _P1_1	=	0x0091
                           000092   163 _P1_2	=	0x0092
                           000093   164 _P1_3	=	0x0093
                           000094   165 _P1_4	=	0x0094
                           000095   166 _P1_5	=	0x0095
                           000096   167 _P1_6	=	0x0096
                           000097   168 _P1_7	=	0x0097
                           000098   169 _RI	=	0x0098
                           000099   170 _TI	=	0x0099
                           00009A   171 _RB8	=	0x009a
                           00009B   172 _TB8	=	0x009b
                           00009C   173 _REN	=	0x009c
                           00009D   174 _SM2	=	0x009d
                           00009E   175 _SM1	=	0x009e
                           00009F   176 _SM0	=	0x009f
                           0000A0   177 _P2_0	=	0x00a0
                           0000A1   178 _P2_1	=	0x00a1
                           0000A2   179 _P2_2	=	0x00a2
                           0000A3   180 _P2_3	=	0x00a3
                           0000A4   181 _P2_4	=	0x00a4
                           0000A5   182 _P2_5	=	0x00a5
                           0000A6   183 _P2_6	=	0x00a6
                           0000A7   184 _P2_7	=	0x00a7
                           0000A8   185 _EX0	=	0x00a8
                           0000A9   186 _ET0	=	0x00a9
                           0000AA   187 _EX1	=	0x00aa
                           0000AB   188 _ET1	=	0x00ab
                           0000AC   189 _ES	=	0x00ac
                           0000AF   190 _EA	=	0x00af
                           0000B0   191 _P3_0	=	0x00b0
                           0000B1   192 _P3_1	=	0x00b1
                           0000B2   193 _P3_2	=	0x00b2
                           0000B3   194 _P3_3	=	0x00b3
                           0000B4   195 _P3_4	=	0x00b4
                           0000B5   196 _P3_5	=	0x00b5
                           0000B6   197 _P3_6	=	0x00b6
                           0000B7   198 _P3_7	=	0x00b7
                           0000B0   199 _RXD	=	0x00b0
                           0000B1   200 _TXD	=	0x00b1
                           0000B2   201 _INT0	=	0x00b2
                           0000B3   202 _INT1	=	0x00b3
                           0000B4   203 _T0	=	0x00b4
                           0000B5   204 _T1	=	0x00b5
                           0000B6   205 _WR	=	0x00b6
                           0000B7   206 _RD	=	0x00b7
                           0000B8   207 _PX0	=	0x00b8
                           0000B9   208 _PT0	=	0x00b9
                           0000BA   209 _PX1	=	0x00ba
                           0000BB   210 _PT1	=	0x00bb
                           0000BC   211 _PS	=	0x00bc
                           0000D0   212 _P	=	0x00d0
                           0000D1   213 _F1	=	0x00d1
                           0000D2   214 _OV	=	0x00d2
                           0000D3   215 _RS0	=	0x00d3
                           0000D4   216 _RS1	=	0x00d4
                           0000D5   217 _F0	=	0x00d5
                           0000D6   218 _AC	=	0x00d6
                           0000D7   219 _CY	=	0x00d7
                                    220 ;--------------------------------------------------------
                                    221 ; overlayable register banks
                                    222 ;--------------------------------------------------------
                                    223 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        224 	.ds 8
                                    225 ;--------------------------------------------------------
                                    226 ; internal ram data
                                    227 ;--------------------------------------------------------
                                    228 	.area DSEG    (DATA)
      000008                        229 _x::
      000008                        230 	.ds 1
      000009                        231 _u::
      000009                        232 	.ds 1
      00000A                        233 _z::
      00000A                        234 	.ds 1
      00000B                        235 _v::
      00000B                        236 	.ds 10
      000015                        237 _i::
      000015                        238 	.ds 1
      000016                        239 _j::
      000016                        240 	.ds 1
                                    241 ;--------------------------------------------------------
                                    242 ; overlayable items in internal ram 
                                    243 ;--------------------------------------------------------
                                    244 ;--------------------------------------------------------
                                    245 ; Stack segment in internal ram 
                                    246 ;--------------------------------------------------------
                                    247 	.area	SSEG
      000017                        248 __start__stack:
      000017                        249 	.ds	1
                                    250 
                                    251 ;--------------------------------------------------------
                                    252 ; indirectly addressable internal ram data
                                    253 ;--------------------------------------------------------
                                    254 	.area ISEG    (DATA)
                                    255 ;--------------------------------------------------------
                                    256 ; absolute internal ram data
                                    257 ;--------------------------------------------------------
                                    258 	.area IABS    (ABS,DATA)
                                    259 	.area IABS    (ABS,DATA)
                                    260 ;--------------------------------------------------------
                                    261 ; bit data
                                    262 ;--------------------------------------------------------
                                    263 	.area BSEG    (BIT)
                                    264 ;--------------------------------------------------------
                                    265 ; paged external ram data
                                    266 ;--------------------------------------------------------
                                    267 	.area PSEG    (PAG,XDATA)
                                    268 ;--------------------------------------------------------
                                    269 ; external ram data
                                    270 ;--------------------------------------------------------
                                    271 	.area XSEG    (XDATA)
                                    272 ;--------------------------------------------------------
                                    273 ; absolute external ram data
                                    274 ;--------------------------------------------------------
                                    275 	.area XABS    (ABS,XDATA)
                                    276 ;--------------------------------------------------------
                                    277 ; external initialized ram data
                                    278 ;--------------------------------------------------------
                                    279 	.area XISEG   (XDATA)
                                    280 	.area HOME    (CODE)
                                    281 	.area GSINIT0 (CODE)
                                    282 	.area GSINIT1 (CODE)
                                    283 	.area GSINIT2 (CODE)
                                    284 	.area GSINIT3 (CODE)
                                    285 	.area GSINIT4 (CODE)
                                    286 	.area GSINIT5 (CODE)
                                    287 	.area GSINIT  (CODE)
                                    288 	.area GSFINAL (CODE)
                                    289 	.area CSEG    (CODE)
                                    290 ;--------------------------------------------------------
                                    291 ; interrupt vector 
                                    292 ;--------------------------------------------------------
                                    293 	.area HOME    (CODE)
      000000                        294 __interrupt_vect:
      000000 02 00 06         [24]  295 	ljmp	__sdcc_gsinit_startup
                                    296 ;--------------------------------------------------------
                                    297 ; global & static initialisations
                                    298 ;--------------------------------------------------------
                                    299 	.area HOME    (CODE)
                                    300 	.area GSINIT  (CODE)
                                    301 	.area GSFINAL (CODE)
                                    302 	.area GSINIT  (CODE)
                                    303 	.globl __sdcc_gsinit_startup
                                    304 	.globl __sdcc_program_startup
                                    305 	.globl __start__stack
                                    306 	.globl __mcs51_genXINIT
                                    307 	.globl __mcs51_genXRAMCLEAR
                                    308 	.globl __mcs51_genRAMCLEAR
                                    309 	.area GSFINAL (CODE)
      00005F 02 00 03         [24]  310 	ljmp	__sdcc_program_startup
                                    311 ;--------------------------------------------------------
                                    312 ; Home
                                    313 ;--------------------------------------------------------
                                    314 	.area HOME    (CODE)
                                    315 	.area HOME    (CODE)
      000003                        316 __sdcc_program_startup:
      000003 02 00 62         [24]  317 	ljmp	_main
                                    318 ;	return from main will return to caller
                                    319 ;--------------------------------------------------------
                                    320 ; code
                                    321 ;--------------------------------------------------------
                                    322 	.area CSEG    (CODE)
                                    323 ;------------------------------------------------------------
                                    324 ;Allocation info for local variables in function 'main'
                                    325 ;------------------------------------------------------------
                                    326 ;	lab11.c:7: int main() {
                                    327 ;	-----------------------------------------
                                    328 ;	 function main
                                    329 ;	-----------------------------------------
      000062                        330 _main:
                           000007   331 	ar7 = 0x07
                           000006   332 	ar6 = 0x06
                           000005   333 	ar5 = 0x05
                           000004   334 	ar4 = 0x04
                           000003   335 	ar3 = 0x03
                           000002   336 	ar2 = 0x02
                           000001   337 	ar1 = 0x01
                           000000   338 	ar0 = 0x00
                                    339 ;	lab11.c:9: x = 98;
      000062 75 08 62         [24]  340 	mov	_x,#0x62
                                    341 ;	lab11.c:10: P3 = 0x00;
      000065 75 B0 00         [24]  342 	mov	_P3,#0x00
                                    343 ;	lab11.c:11: v[0] = 0xC0;
      000068 75 0B C0         [24]  344 	mov	_v,#0xc0
                                    345 ;	lab11.c:12: v[1] = 0xF9;
      00006B 75 0C F9         [24]  346 	mov	(_v + 0x0001),#0xf9
                                    347 ;	lab11.c:13: v[2] = 0xA4;
      00006E 75 0D A4         [24]  348 	mov	(_v + 0x0002),#0xa4
                                    349 ;	lab11.c:14: v[3] = 0xB0;
      000071 75 0E B0         [24]  350 	mov	(_v + 0x0003),#0xb0
                                    351 ;	lab11.c:15: v[4] = 0x99;
      000074 75 0F 99         [24]  352 	mov	(_v + 0x0004),#0x99
                                    353 ;	lab11.c:16: v[5] = 0x92;
      000077 75 10 92         [24]  354 	mov	(_v + 0x0005),#0x92
                                    355 ;	lab11.c:17: v[6] = 0x82;
      00007A 75 11 82         [24]  356 	mov	(_v + 0x0006),#0x82
                                    357 ;	lab11.c:18: v[7] = 0xF8;
      00007D 75 12 F8         [24]  358 	mov	(_v + 0x0007),#0xf8
                                    359 ;	lab11.c:19: v[8] = 0x80;
      000080 75 13 80         [24]  360 	mov	(_v + 0x0008),#0x80
                                    361 ;	lab11.c:20: v[9] = 0x90;
      000083 75 14 90         [24]  362 	mov	(_v + 0x0009),#0x90
                                    363 ;	lab11.c:21: while(1) {
      000086                        364 00110$:
                                    365 ;	lab11.c:22: if(x > 9 && x <= 99) {
      000086 E5 08            [12]  366 	mov	a,_x
      000088 24 F6            [12]  367 	add	a,#0xff - 0x09
      00008A 50 3D            [24]  368 	jnc	00106$
      00008C E5 08            [12]  369 	mov	a,_x
      00008E 24 9C            [12]  370 	add	a,#0xff - 0x63
      000090 40 37            [24]  371 	jc	00106$
                                    372 ;	lab11.c:23: z=0;
      000092 75 0A 00         [24]  373 	mov	_z,#0x00
                                    374 ;	lab11.c:24: u = x;
      000095 85 08 09         [24]  375 	mov	_u,_x
                                    376 ;	lab11.c:25: while(u >= 10) {
      000098                        377 00101$:
      000098 74 F6            [12]  378 	mov	a,#0x100 - 0x0a
      00009A 25 09            [12]  379 	add	a,_u
      00009C 50 0E            [24]  380 	jnc	00103$
                                    381 ;	lab11.c:26: u = u - 10;
      00009E E5 09            [12]  382 	mov	a,_u
      0000A0 24 F6            [12]  383 	add	a,#0xf6
      0000A2 F5 09            [12]  384 	mov	_u,a
                                    385 ;	lab11.c:28: z=z+1;
      0000A4 E5 0A            [12]  386 	mov	a,_z
      0000A6 FF               [12]  387 	mov	r7,a
      0000A7 04               [12]  388 	inc	a
      0000A8 F5 0A            [12]  389 	mov	_z,a
      0000AA 80 EC            [24]  390 	sjmp	00101$
      0000AC                        391 00103$:
                                    392 ;	lab11.c:30: P3=0x00;
      0000AC 75 B0 00         [24]  393 	mov	_P3,#0x00
                                    394 ;	lab11.c:31: P1 = v[u];
      0000AF E5 09            [12]  395 	mov	a,_u
      0000B1 24 0B            [12]  396 	add	a,#_v
      0000B3 F9               [12]  397 	mov	r1,a
      0000B4 87 90            [24]  398 	mov	_P1,@r1
                                    399 ;	lab11.c:32: for(j=0; j<20;j++);
      0000B6 75 16 14         [24]  400 	mov	_j,#0x14
      0000B9                        401 00114$:
      0000B9 D5 16 FD         [24]  402 	djnz	_j,00114$
      0000BC 75 16 14         [24]  403 	mov	_j,#0x14
                                    404 ;	lab11.c:33: P1 = v[z];
      0000BF E5 0A            [12]  405 	mov	a,_z
      0000C1 24 0B            [12]  406 	add	a,#_v
      0000C3 F9               [12]  407 	mov	r1,a
      0000C4 87 90            [24]  408 	mov	_P1,@r1
                                    409 ;	lab11.c:34: P3=0x08;
      0000C6 75 B0 08         [24]  410 	mov	_P3,#0x08
      0000C9                        411 00106$:
                                    412 ;	lab11.c:36: for(i=0; i<5;i++);
      0000C9 75 15 05         [24]  413 	mov	_i,#0x05
      0000CC                        414 00117$:
      0000CC D5 15 FD         [24]  415 	djnz	_i,00117$
      0000CF 75 15 05         [24]  416 	mov	_i,#0x05
                                    417 ;	lab11.c:38: return 0;
                                    418 ;	lab11.c:39: }
      0000D2 80 B2            [24]  419 	sjmp	00110$
                                    420 	.area CSEG    (CODE)
                                    421 	.area CONST   (CODE)
                                    422 	.area XINIT   (CODE)
                                    423 	.area CABS    (ABS,CODE)
